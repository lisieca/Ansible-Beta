---
- name: "Looking up subnet_id for {{ subnet_name }}"
  register: subnet_id
  amazon.aws.ec2_vpc_subnet_info:
    region: "{{ region }}"
    filters:
      "tag:Name": "{{ subnet_name }}"

- name: "Setting vpc_subnet_id based on Lookup of {{ subnet_name }}"
  ansible.builtin.set_fact:
    vpc_subnet_id: "{{ subnet_id.subnets[0].id }}"

- name: Show Subnet_id
  ansible.builtin.debug:
    msg: "{{ vpc_subnet_id }}"

- name: "Creating AWS VMs in {{ region }}"
  register: instance
  amazon.aws.ec2_instance:
    name: "Ansible-Win-Test"
    state: running
    region: "{{ region }}"
    key_name: "{{ my_ssh_key }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    instance_type: "{{ instance_type }}"
    security_group: "{{ ec2_security_group_name }}"
    network:
      assign_public_ip: "{{ assign_public_ip }}"
    image_id: "{{ image }}"
    tags:
      Environment: win
      AlwaysUp: "{{ alwaysup }}"
      Createdby: Ansible Controller
      Contact: "{{ my_email_address }}"
      DeletebBy: "{{ ec2_ansible_group }}"
      info: "This is a test server"
    user_data: "{{ lookup('template', 'scripts/aws_userdata') }}"
    wait: true
    wait_timeout: 600

# - name: "The instance variable = {{ instance }}"
#   ansible.builtin.debug:
#     msg: "{{ instance }}"

- name: Wait 300 seconds for port 5986 to become open
  loop: "{{ instance['instances'] }}"
  ansible.builtin.wait_for:
    port: 5986
    host: "{{ item['public_ip_address'] }}"
    delay: 10
    timeout: 300